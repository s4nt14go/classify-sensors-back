service: classify-sensors

package:
  individually: true  # Create an optimized package for our functions

custom:
  stage: ${opt:stage, self:provider.stage}
  bucket: ${self:service}-${self:custom.stage}
  bundle:
    sourcemaps: false # avoid 'x is not a function' error with imports

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource:
        - Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - ${self:custom.bucket}
              - "/*"
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        - Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - ${self:custom.bucket}-output
              - "/*"
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:lambda:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - ':function:'
            - ${self:service}-${self:custom.stage}-classify

functions:
  classify:
    handler: src/handler.classify
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
    environment:
      BUCKET_OUTPUT: !Ref BucketOutput

resources:
  Resources:
    BucketOutput:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}-output
