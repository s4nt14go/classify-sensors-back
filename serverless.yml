service: classify-sensors

package:
  individually: true  # Create an optimized package for our functions

custom:
  stage: ${opt:stage, self:provider.stage}
  bundle:
    sourcemaps: false # avoid 'x is not a function' error with imports

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1

functions:
  classify:
    handler: src/handler.classify
    events:
      - s3:
          bucket: !Ref UploadBucket
          event: s3:ObjectCreated:*
          existing: true
    environment:
      OUTPUT_BUCKET: !Ref OutputBucket
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:GetObject
        Resource: !Sub ${UploadBucket.Arn}/*
      - Effect: Allow
        Action:
          - s3:PutObject
        Resource: !Sub ${OutputBucket.Arn}/*

  sign-post:
    handler: src/sign-post.sign
    events:
      - http:
          path: /signed-post
          method: get
          cors: true
    environment:
      UPLOAD_BUCKET: !Ref UploadBucket
    iamRoleStatements:
      - Effect: Allow
        Action:
          - s3:PutObject
        Resource: !Sub ${UploadBucket.Arn}/*

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - PUT
                - POST
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
    OutputBucket:
      Type: AWS::S3::Bucket
